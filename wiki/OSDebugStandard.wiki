#summary OS Debug Information Standard.
#labels HowTo,Phase-Implementation

= Introduction =

What is OS debug information standard?
  * To display custom operating system debug information in peter-bochs. If you are developing your own operating system, you probably want to find a easy way to display the debug informations out of the emulator. This document describes the data format of it.

[http://peter-bochs.googlecode.com/files/os_debug_information.png]

= You must know =

  * The "OS debug information" stored in a continuous block of memory.
  * You can put this block anywhere in memory.
  * The block size is not fix. It depends on how many information you want to display in peter-bochs
  * Peter-bochs debugger can display the os debug information.
  * When you start peter-bochs, it will search for the debug information block automatically, so zero config.

= Data format =

||*Offset*||*Field*||*Example value*||*Size*||*Description*||
||0-7||Magic bytes||PETER---||8||All capital letter||
||8-11||Size of xml|| ||4||The size of the xml, the format of the xml is described below||

== XML format ==

{{{
<xml>
	<os>
		<name>Peter operating system</name>
		<uptime>2010/4/22 12:13:45</uptime>
		<release notes></release notes>
	</os>
	<kernel>
		<name>SL</name>
		<version>1</version>
		<address>0x10000</address>
		<modules>
			<module>
				<name>interruptEnginer</name>
				<address>0x12345678</address>
			</module>
		</modules>
		<interrupts>
			<interrupt>
				<no>1</no>
				<address>0x2345</address>
				<tssNo>3</tssNo>
			</interrupt>
		</interrupts>
		<memory allocator>
			<region>
				<address>0x100</address>				
				<length>0x200</length>
			</region>
			<allocated region>
				<region>
					<address>0x100</address>				
					<length>0x200</length>
					<virtual address>0x200</virtual address>
					<name of process>program.elf</name of process>
				</region>
			</allocated region>
		</memory allocator>
	</kernel>
	<libraries>
		<library>
			<name>libc.so</name>
			<status>loaded</status>
		</library>
	</libraries>
	<processes>
		<process>
			<PID>1</PID>
			<name>test.elf</name>
			<tssNo>12</tssNo>
			<mmap>
				<memory>
					<type>physical</type>
					<length>0x200</length>
					<address>0x100</address>
				</memory
			</mmap>
			<backlink>2</backlink>
			<status>running</status>
			<cmdline>XXX</cmdline>
		</process>
	</processes>
</xml>
}}}

<table border="0"><tr><td>
[http://www.kingofcoders.com http://www.kingofcoders.com/images/KOC_logo2.jpg]
</td>
<td>
</td>
<td>
[http://www.rmit.edu.au/compsci http://peter-bochs.googlecode.com/files/rmit.gif]
</td>
</tr>
</table>